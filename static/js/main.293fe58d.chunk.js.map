{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","message","avatar","time","name","className","m","item","src","alt","content","text","messageData","HW1","SuperButton","high","low","middle","restProps","finalClassName","s","default","Affair","props","affairItem","affair","style","color","levelColors","priority","delete","children","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","onClickButtonHandler","filter","setFilter","affairsWrapper","buttonsWrapper","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","form","GreetingContainer","users","addUserCallback","setName","setError","length","trim","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","checkbox","checked","HW4","setText","showAlert","alert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.293fe58d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairsWrapper\":\"Affairs_affairsWrapper__1T4S4\",\"affairItem\":\"Affairs_affairItem__3NdqX\",\"buttonsWrapper\":\"Affairs_buttonsWrapper__3TSQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__2zfMX\",\"content\":\"Message_content__2pwZt\",\"time\":\"Message_time__3-zZI\",\"name\":\"Message_name__2Icgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__WGDZD\",\"high\":\"SuperButton_high__31es_\",\"middle\":\"SuperButton_middle__3H7V9\",\"low\":\"SuperButton_low__1SCbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3KQkQ\",\"errorInput\":\"SuperInputText_errorInput__KYyYY\",\"default\":\"SuperInputText_default__2MGEU\",\"error\":\"SuperInputText_error__36bA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__k_7zZ\",\"column\":\"HW4_column__39Szd\",\"testSpanError\":\"HW4_testSpanError__3iLGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__qG2_H\",\"spanClassName\":\"SuperCheckbox_spanClassName__2eoQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1xp2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__1PSSp\",\"errorMessage\":\"Greeting_errorMessage__2NfsP\",\"form\":\"Greeting_form__1VTp_\"};","import React from 'react'\r\nimport m from './Message.module.css'\r\n\r\nconst Message: React.FC<MessagePropsType> = ({message, avatar, time, name}) => {\r\n    return (\r\n        <div className={m.item}>\r\n            <img src={avatar} alt=\"avatar\"/>\r\n            <div className={m.content}>\r\n                <div className={m.name}>{name}</div>\r\n                <div className={m.text}>{message}</div>\r\n                <div className={m.time}>{time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Иван',\r\n    message: 'Hello',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    high?: boolean\r\n    low?: boolean\r\n    middle?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        high, low, middle, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n\r\n\r\n    const finalClassName = `${high ? s.high : low ? s.low : middle ? s.middle : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType, levelColors} from './HW2';\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)\r\n\r\n    return (\r\n        <div className={s.affairItem}>\r\n            <div>{props.affair.name}</div>\r\n            <div style={{ color: `${levelColors[props.affair.priority]}` }}>[{props.affair.priority}]</div>\r\n            <SuperButton className={s.delete} high children={\"x\"} onClick={deleteCallback}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType, levelColors} from './HW2'\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const onClickButtonHandler = (filter: FilterType) => props.setFilter(filter)\r\n\r\n    return (\r\n        <div className={s.affairsWrapper}>\r\n\r\n            {mappedAffairs}\r\n            <div className={s.buttonsWrapper}>\r\n                <SuperButton onClick={() => onClickButtonHandler('all')} children={'all'}/>\r\n                <SuperButton onClick={() => onClickButtonHandler('high')} high children={'high'}/>\r\n                <SuperButton onClick={() => onClickButtonHandler('middle')} middle children={'middle'}/>\r\n                <SuperButton onClick={() => onClickButtonHandler('low')} low children={'low'}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n//constants levelColors\r\nexport const levelColors = {\r\n    high: \"#7f0404\",\r\n    low: \"#6be816\",\r\n    middle: \"#e5c80b\"\r\n}\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    return filter === 'all' ?  affairs : affairs.filter(a => a.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = error && className ? `${s.errorInput} ${className}` : className ? `${className}` : `${s.default}`\r\n\r\n    return (\r\n        <div className={s.superInput}>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.form}>\r\n                <SuperInputText error={error} value={name} onChange={setNameCallback}/>\r\n                <SuperButton onClick={addUser} children={\"add\"}/>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        if(name.trim()) {\r\n            addUserCallback(name.trim())\r\n            setName('')\r\n        } else {\r\n            setName(name.trim())\r\n            setError('Required field!')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    const addUserCallback = (name: string) => {\r\n        setUsers([...users, {_id: v1(), name}])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остал   ьные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    high // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}